'use client';

import React, { useState, useEffect } from 'react';

interface SyncStats {
  date: string;
  delivered_assignments: number;
  synced_leads: number;
  pending_sync: number;
  sync_status: 'pending' | 'synced';
}

interface DeliveryStats {
  stats: Array<{
    status: string;
    _count: { id: number };
  }>;
  total_delivered: number;
  total_synced: number;
  date: string;
}

export default function CRMSyncPage() {
  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);
  const [syncStats, setSyncStats] = useState<SyncStats | null>(null);
  const [deliveryStats, setDeliveryStats] = useState<DeliveryStats | null>(null);
  const [loading, setLoading] = useState(false);
  const [notification, setNotification] = useState<string>('');

  useEffect(() => {
    fetchSyncStats();
  }, [selectedDate]);

  const fetchSyncStats = async () => {
    try {
      setLoading(true);
      const response = await fetch(`/api/crm-sync?date=${selectedDate}`);
      
      if (response.ok) {
        const data = await response.json();
        setSyncStats(data);
      } else {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏');
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
    } finally {
      setLoading(false);
    }
  };

  const syncDeliveredStatus = async () => {
    try {
      setLoading(true);
      const response = await fetch('/api/crm-sync', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          action: 'sync_delivered_status',
          date: selectedDate
        })
      });

      if (response.ok) {
        const data = await response.json();
        showNotification(`‚úÖ ${data.message}`);
        await fetchSyncStats();
      } else {
        const error = await response.json();
        showNotification(`‚ùå ${error.error || '–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏'}`);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:', error);
      showNotification('‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º');
    } finally {
      setLoading(false);
    }
  };

  const getDeliveryStats = async () => {
    try {
      setLoading(true);
      const response = await fetch('/api/crm-sync', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          action: 'get_delivery_stats',
          date: selectedDate
        })
      });

      if (response.ok) {
        const data = await response.json();
        setDeliveryStats(data);
        showNotification('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
      } else {
        const error = await response.json();
        showNotification(`‚ùå ${error.error || '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏'}`);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
      showNotification('‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º');
    } finally {
      setLoading(false);
    }
  };

  const showNotification = (message: string) => {
    setNotification(message);
    setTimeout(() => setNotification(''), 3000);
  };

  const getStatusColor = (status: string) => {
    switch (status) {
      case 'accepted': return 'bg-yellow-100 text-yellow-800';
      case 'in_progress': return 'bg-blue-100 text-blue-800';
      case 'delivered': return 'bg-green-100 text-green-800';
      case 'cancelled': return 'bg-red-100 text-red-800';
      default: return 'bg-gray-100 text-gray-800';
    }
  };

  const getStatusText = (status: string) => {
    switch (status) {
      case 'accepted': return '–ü–†–ò–ù–Ø–¢–û';
      case 'in_progress': return '–í –ü–£–¢–ò';
      case 'delivered': return '–î–û–°–¢–ê–í–õ–ï–ù–û';
      case 'cancelled': return '–û–¢–ú–ï–ù–ï–ù–û';
      default: return status.toUpperCase();
    }
  };

  return (
    <div className="min-h-screen bg-gray-100">
      {/* –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è */}
      {notification && (
        <div className="fixed top-4 left-4 right-4 z-50 bg-white border-l-4 border-blue-500 rounded-lg shadow-lg p-3 mx-4">
          <div className="text-sm font-medium text-gray-900 text-center">
            {notification}
          </div>
        </div>
      )}

      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="bg-white shadow-sm border-b border-gray-200 p-4">
        <div className="flex items-center justify-between">
          <div>
            <h1 className="text-2xl font-bold text-gray-900">üîÑ –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø –° CRM</h1>
            <p className="text-gray-600">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞–º–∏ –¥–æ—Å—Ç–∞–≤–æ–∫</p>
          </div>
          <input
            type="date"
            value={selectedDate}
            onChange={(e) => setSelectedDate(e.target.value)}
            className="border border-gray-300 rounded-lg px-3 py-2 text-sm"
          />
        </div>
      </div>

      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      <div className="p-4 space-y-6">
        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ */}
        <div className="bg-white rounded-lg shadow-sm p-6">
          <h2 className="text-xl font-bold text-gray-900 mb-4">üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò</h2>
          
          {loading ? (
            <div className="text-center py-8">
              <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-4"></div>
              <p className="text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞...</p>
            </div>
          ) : syncStats ? (
            <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
              <div className="bg-blue-50 rounded-lg p-4 text-center">
                <div className="text-2xl font-bold text-blue-600">{syncStats.delivered_assignments}</div>
                <div className="text-sm text-blue-700 font-medium">–î–û–°–¢–ê–í–õ–ï–ù–û</div>
              </div>
              
              <div className="bg-green-50 rounded-lg p-4 text-center">
                <div className="text-2xl font-bold text-green-600">{syncStats.synced_leads}</div>
                <div className="text-sm text-green-700 font-medium">–°–ò–ù–•–†–û–ù–ò–ó–ò–†–û–í–ê–ù–û</div>
              </div>
              
              <div className="bg-orange-50 rounded-lg p-4 text-center">
                <div className="text-2xl font-bold text-orange-600">{syncStats.pending_sync}</div>
                <div className="text-sm text-orange-700 font-medium">–û–ñ–ò–î–ê–ï–¢ –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò</div>
              </div>
              
              <div className={`rounded-lg p-4 text-center ${
                syncStats.sync_status === 'synced' ? 'bg-green-50' : 'bg-yellow-50'
              }`}>
                <div className={`text-2xl font-bold ${
                  syncStats.sync_status === 'synced' ? 'text-green-600' : 'text-yellow-600'
                }`}>
                  {syncStats.sync_status === 'synced' ? '‚úÖ' : '‚è≥'}
                </div>
                <div className={`text-sm font-medium ${
                  syncStats.sync_status === 'synced' ? 'text-green-700' : 'text-yellow-700'
                }`}>
                  {syncStats.sync_status === 'synced' ? '–°–ò–ù–•–†–û–ù–ò–ó–ò–†–û–í–ê–ù–û' : '–û–ñ–ò–î–ê–ï–¢'}
                </div>
              </div>
            </div>
          ) : (
            <div className="text-center py-8 text-gray-500">
              –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
            </div>
          )}
        </div>

        {/* –î–µ–π—Å—Ç–≤–∏—è */}
        <div className="bg-white rounded-lg shadow-sm p-6">
          <h2 className="text-xl font-bold text-gray-900 mb-4">‚öôÔ∏è –î–ï–ô–°–¢–í–ò–Ø</h2>
          
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <button
              onClick={syncDeliveredStatus}
              disabled={loading || !syncStats || syncStats.pending_sync === 0}
              className="bg-blue-600 text-white py-3 px-6 rounded-lg font-bold hover:bg-blue-700 disabled:bg-gray-300 disabled:cursor-not-allowed transition-all"
            >
              {loading ? '–°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø...' : '–°–ò–ù–•–†–û–ù–ò–ó–ò–†–û–í–ê–¢–¨ –° CRM'}
            </button>
            
            <button
              onClick={getDeliveryStats}
              disabled={loading}
              className="bg-green-600 text-white py-3 px-6 rounded-lg font-bold hover:bg-green-700 disabled:bg-gray-300 disabled:cursor-not-allowed transition-all"
            >
              {loading ? '–ó–ê–ì–†–£–ó–ö–ê...' : '–ü–û–õ–£–ß–ò–¢–¨ –°–¢–ê–¢–ò–°–¢–ò–ö–£'}
            </button>
          </div>
          
          {syncStats && syncStats.pending_sync > 0 && (
            <div className="mt-4 p-4 bg-yellow-50 border border-yellow-200 rounded-lg">
              <div className="flex items-center">
                <span className="text-yellow-600 mr-2">‚ö†Ô∏è</span>
                <span className="text-yellow-800 font-medium">
                  {syncStats.pending_sync} –∑–∞—è–≤–æ–∫ –æ–∂–∏–¥–∞—é—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å CRM
                </span>
              </div>
            </div>
          )}
        </div>

        {/* –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
        {deliveryStats && (
          <div className="bg-white rounded-lg shadow-sm p-6">
            <h2 className="text-xl font-bold text-gray-900 mb-4">üìà –î–ï–¢–ê–õ–¨–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê</h2>
            
            <div className="grid grid-cols-1 md:grid-cols-3 gap-4 mb-6">
              <div className="bg-gray-50 rounded-lg p-4 text-center">
                <div className="text-2xl font-bold text-gray-900">{deliveryStats.total_delivered}</div>
                <div className="text-sm text-gray-600 font-medium">–í–°–ï–ì–û –î–û–°–¢–ê–í–õ–ï–ù–û</div>
              </div>
              
              <div className="bg-gray-50 rounded-lg p-4 text-center">
                <div className="text-2xl font-bold text-gray-900">{deliveryStats.total_synced}</div>
                <div className="text-sm text-gray-600 font-medium">–°–ò–ù–•–†–û–ù–ò–ó–ò–†–û–í–ê–ù–û</div>
              </div>
              
              <div className="bg-gray-50 rounded-lg p-4 text-center">
                <div className="text-2xl font-bold text-gray-900">
                  {deliveryStats.total_delivered - deliveryStats.total_synced}
                </div>
                <div className="text-sm text-gray-600 font-medium">–û–ñ–ò–î–ê–ï–¢ –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò</div>
              </div>
            </div>
            
            <div className="space-y-3">
              <h3 className="font-bold text-gray-900">–°–¢–ê–¢–£–°–´ –ù–ê–ó–ù–ê–ß–ï–ù–ò–ô:</h3>
              {deliveryStats.stats.map((stat, index) => (
                <div key={index} className="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                  <div className="flex items-center">
                    <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-bold ${getStatusColor(stat.status)}`}>
                      {getStatusText(stat.status)}
                    </span>
                  </div>
                  <div className="text-lg font-bold text-gray-900">{stat._count.id}</div>
                </div>
              ))}
            </div>
          </div>
        )}

        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <div className="bg-white rounded-lg shadow-sm p-6">
          <h2 className="text-xl font-bold text-gray-900 mb-4">‚ÑπÔ∏è –ò–ù–§–û–†–ú–ê–¶–ò–Ø</h2>
          
          <div className="space-y-4 text-sm text-gray-700">
            <div className="flex items-start">
              <span className="text-blue-600 mr-2">üîÑ</span>
              <div>
                <strong>–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è:</strong> –ü—Ä–∏ –æ—Ç–º–µ—Ç–∫–µ –¥–æ—Å—Ç–∞–≤–∫–∏ –≤–æ–¥–∏—Ç–µ–ª–µ–º –∏–ª–∏ –∫—É—Ä—å–µ—Ä–æ–º, —Å—Ç–∞—Ç—É—Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –≤ CRM —Å–∏—Å—Ç–µ–º–µ.
              </div>
            </div>
            
            <div className="flex items-start">
              <span className="text-green-600 mr-2">‚úÖ</span>
              <div>
                <strong>–ú–∞—Å—Å–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏:</strong> –í–æ–¥–∏—Ç–µ–ª–∏ –º–æ–≥—É—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –≤—Å–µ –Ω–æ–≤—ã–µ –∑–∞—è–≤–∫–∏ –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π, –∫—É—Ä—å–µ—Ä—ã - –∑–∞–≤–µ—Ä—à–∞—Ç—å –≤—Å–µ –¥–æ—Å—Ç–∞–≤–∫–∏.
              </div>
            </div>
            
            <div className="flex items-start">
              <span className="text-purple-600 mr-2">üìä</span>
              <div>
                <strong>–û—Ç—á–µ—Ç–Ω–æ—Å—Ç—å:</strong> –°–∏—Å—Ç–µ–º–∞ –≤–µ–¥–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º –¥–æ—Å—Ç–∞–≤–æ–∫ –∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å CRM.
              </div>
            </div>
            
            <div className="flex items-start">
              <span className="text-orange-600 mr-2">‚ö†Ô∏è</span>
              <div>
                <strong>–í–∞–∂–Ω–æ:</strong> –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏. –ï—Å–ª–∏ –µ—Å—Ç—å –Ω–µ—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É "–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å CRM".
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}
