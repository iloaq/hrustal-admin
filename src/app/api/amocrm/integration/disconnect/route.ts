import { NextResponse } from 'next/server';

// Webhook –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ AmoCRM
// URL –¥–ª—è AmoCRM: https://dashboard-hrustal.skybric.com/api/amocrm/integration/disconnect

export async function POST(request: Request) {
  try {
    const body = await request.json();
    const timestamp = new Date().toISOString();
    
    console.log('üîå AmoCRM –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞:', {
      data: body,
      timestamp,
      ip: request.headers.get('x-forwarded-for') || 'unknown'
    });

    // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ webhook
    const {
      account_id,
      widget_code,
      widget_uuid,
      uninstall_reason,
      account
    } = body;

    // –õ–æ–≥–∏—Ä—É–µ–º –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    if (account_id) {
      console.log(`üìã –ê–∫–∫–∞—É–Ω—Ç ${account_id} –æ—Ç–∫–ª—é—á–∏–ª –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é`);
      console.log(`üéõÔ∏è –í–∏–¥–∂–µ—Ç: ${widget_code || 'unknown'}`);
      console.log(`üÜî UUID: ${widget_uuid || 'unknown'}`);
      console.log(`‚ùì –ü—Ä–∏—á–∏–Ω–∞: ${uninstall_reason || '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'}`);
    }

    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è:
    // 1. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ –≤ –ë–î
    // 2. –û—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
    // 3. –û—á–∏—Å—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    // 4. –û—Ç–ø—Ä–∞–≤–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏

    /*
    // –ü—Ä–∏–º–µ—Ä —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ë–î:
    await prisma.integrationLog.create({
      data: {
        action: 'disconnect',
        account_id: account_id?.toString(),
        widget_code,
        widget_uuid,
        reason: uninstall_reason,
        data: body,
        timestamp: new Date()
      }
    });
    */

    // –ú–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    /*
    await sendNotification({
      type: 'integration_disconnected',
      account_id,
      reason: uninstall_reason,
      timestamp
    });
    */

    // AmoCRM –æ–∂–∏–¥–∞–µ—Ç –æ—Ç–≤–µ—Ç —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º 200
    return NextResponse.json({
      success: true,
      message: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ –ø–æ–ª—É—á–µ–Ω–æ',
      timestamp,
      processed: true
    });

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ö—É–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è AmoCRM:', error);
    
    // –î–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ –ª—É—á—à–µ –≤–µ—Ä–Ω—É—Ç—å 200, —á—Ç–æ–±—ã AmoCRM –Ω–µ –ø–æ–≤—Ç–æ—Ä—è–ª –∑–∞–ø—Ä–æ—Å
    return NextResponse.json({
      success: false,
      error: '–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ webhook',
      timestamp: new Date().toISOString()
    }, { status: 200 });
  }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ endpoint
export async function GET(request: Request) {
  return NextResponse.json({
    status: 'active',
    service: 'AmoCRM Integration Disconnect Webhook',
    timestamp: new Date().toISOString(),
    url: 'https://dashboard-hrustal.skybric.com/api/amocrm/integration/disconnect'
  });
}

// CORS –¥–ª—è AmoCRM
export async function OPTIONS(request: Request) {
  return new NextResponse(null, {
    status: 200,
    headers: {
      'Access-Control-Allow-Origin': '*',
      'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',
      'Access-Control-Allow-Headers': 'Content-Type, Authorization',
    },
  });
}
