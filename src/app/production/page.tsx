'use client';

import { useState, useEffect } from 'react';

interface ProductionState {
  // –û—Å—Ç–∞—Ç–∫–∏ —Ç–∞—Ä—ã
  empty_bottles_19l: number;
  empty_bottles_5l: number;
  
  // –ì–æ—Ç–æ–≤–∞—è –ø—Ä–æ–¥—É–∫—Ü–∏—è
  hrustalnaya_19l: number;
  hrustalnaya_5l: number;
  malysh_19l: number;
  malysh_5l: number;
  selen_19l: number;
  selen_5l: number;
  
  // –ü–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –ø–æ –∑–∞—è–≤–∫–∞–º
  needs_hrustalnaya_19l: number;
  needs_hrustalnaya_5l: number;
  needs_malysh_19l: number;
  needs_malysh_5l: number;
  needs_selen_19l: number;
  needs_selen_5l: number;
}

interface TruckLoading {
  truck_name: string;
  time_slot: string;
  hrustalnaya_orders_19l: number;
  hrustalnaya_orders_5l: number;
  malysh_orders_19l: number;
  malysh_orders_5l: number;
  selen_orders_19l: number;
  selen_orders_5l: number;
  hrustalnaya_free_19l: number;
  hrustalnaya_free_5l: number;
  malysh_free_19l: number;
  malysh_free_5l: number;
  selen_free_19l: number;
  selen_free_5l: number;
}

type TabType = 'warehouse' | 'production' | 'loading' | 'analytics';

export default function ProductionPage() {
  const [selectedDate, setSelectedDate] = useState(() => {
    const today = new Date();
    return today.toISOString().split('T')[0];
  });
  
  const [selectedTimeSlot, setSelectedTimeSlot] = useState<string>('–£—Ç—Ä–æ');
  const [activeTab, setActiveTab] = useState<TabType>('warehouse');
  const [loading, setLoading] = useState(false);
  
  const [production, setProduction] = useState<ProductionState>({
    empty_bottles_19l: 100,
    empty_bottles_5l: 50,
    hrustalnaya_19l: 0,
    hrustalnaya_5l: 0,
    malysh_19l: 0,
    malysh_5l: 0,
    selen_19l: 0,
    selen_5l: 0,
    needs_hrustalnaya_19l: 0,
    needs_hrustalnaya_5l: 0,
    needs_malysh_19l: 0,
    needs_malysh_5l: 0,
    needs_selen_19l: 0,
    needs_selen_5l: 0
  });

  const [truckLoadings, setTruckLoadings] = useState<TruckLoading[]>([]);

  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
  useEffect(() => {
    loadProductionData();
  }, [selectedDate, selectedTimeSlot]);

  const loadProductionData = async () => {
    setLoading(true);
    try {
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –ø–æ –∑–∞—è–≤–∫–∞–º
      const planResponse = await fetch(`/api/production/plan?date=${selectedDate}`);
      if (planResponse.ok) {
        const planData = await planResponse.json();
        
        const needs = {
          hrustalnaya_19l: 0, hrustalnaya_5l: 0,
          malysh_19l: 0, malysh_5l: 0,
          selen_19l: 0, selen_5l: 0
        };

        planData.forEach((item: any) => {
          const productName = item.productName?.toLowerCase() || '';
          const quantity = item.quantity || 0;
          const volume = item.volume || '19l';
          
          if (productName.includes('—Ö—Ä—É—Å—Ç–∞–ª—å–Ω–∞—è')) {
            if (volume === '5l') {
              needs.hrustalnaya_5l += quantity;
            } else {
              needs.hrustalnaya_19l += quantity;
            }
          } else if (productName.includes('–º–∞–ª—ã—à')) {
            if (volume === '5l') {
              needs.malysh_5l += quantity;
            } else {
              needs.malysh_19l += quantity;
            }
          } else if (productName.includes('—Å–µ–ª–µ–Ω')) {
            if (volume === '5l') {
              needs.selen_5l += quantity;
            } else {
              needs.selen_19l += quantity;
            }
          }
        });

        setProduction(prev => ({ ...prev, ...needs }));
      }

      // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞
      const sessionResponse = await fetch(`/api/production/sessions?date=${selectedDate}&timeSlot=${selectedTimeSlot}`);
      if (sessionResponse.ok) {
        const sessionData = await sessionResponse.json();
        
        setProduction(prev => ({
          ...prev,
          empty_bottles_19l: sessionData.bottles_19l_free || 100,
          empty_bottles_5l: sessionData.bottles_5l_free || 50,
          hrustalnaya_19l: sessionData.hrustalnaya_19l_produced || 0,
          hrustalnaya_5l: sessionData.hrustalnaya_5l_produced || 0,
          malysh_19l: sessionData.malysh_19l_produced || 0,
          malysh_5l: sessionData.malysh_5l_produced || 0,
          selen_19l: sessionData.selen_19l_produced || 0,
          selen_5l: sessionData.selen_5l_produced || 0
        }));
      }

      // –ó–∞–≥—Ä—É–∂–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –º–∞—à–∏–Ω
      const loadingsResponse = await fetch(`/api/production/truck-loadings?date=${selectedDate}&timeSlot=${selectedTimeSlot}`);
      if (loadingsResponse.ok) {
        const loadingsData = await loadingsResponse.json();
        setTruckLoadings(loadingsData);
      }
    } catch (error) {
      console.error('Error loading production data:', error);
    } finally {
      setLoading(false);
    }
  };

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
  const saveProductionData = async () => {
    try {
      const response = await fetch('/api/production/sessions', {
        method: 'PUT',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          date: selectedDate,
          timeSlot: selectedTimeSlot,
          hrustalnaya_19l_produced: production.hrustalnaya_19l,
          hrustalnaya_5l_produced: production.hrustalnaya_5l,
          malysh_19l_produced: production.malysh_19l,
          malysh_5l_produced: production.malysh_5l,
          selen_19l_produced: production.selen_19l,
          selen_5l_produced: production.selen_5l,
          bottles_19l_free: production.empty_bottles_19l,
          bottles_5l_free: production.empty_bottles_5l
        })
      });
      
      if (response.ok) {
        alert('‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!');
      }
    } catch (error) {
      console.error('Error saving production data:', error);
      alert('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è');
    }
  };

  // –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ –≤–æ–¥—ã
  const produceWater = (type: string, volume: '19l' | '5l', amount: number) => {
    const bottleType = volume === '19l' ? 'empty_bottles_19l' : 'empty_bottles_5l';
    
    if (production[bottleType as keyof ProductionState] < amount) {
      alert(`‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—É—Å—Ç—ã—Ö –±—É—Ç—ã–ª–æ–∫ ${volume}! –ï—Å—Ç—å: ${production[bottleType as keyof ProductionState]}, –Ω—É–∂–Ω–æ: ${amount}`);
      return;
    }

    setProduction(prev => ({
      ...prev,
      [bottleType]: prev[bottleType as keyof ProductionState] - amount,
      [`${type}_${volume}`]: prev[`${type}_${volume}` as keyof ProductionState] + amount
    }));
  };

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Å—Ç–∞—Ç–∫–æ–≤ —Ç–∞—Ä—ã
  const updateEmptyBottles = (volume: '19l' | '5l', amount: number) => {
    const bottleType = volume === '19l' ? 'empty_bottles_19l' : 'empty_bottles_5l';
    setProduction(prev => ({
      ...prev,
      [bottleType]: Math.max(0, amount)
    }));
  };

  // –ó–∞–≥—Ä—É–∑–∫–∞ –≤ –º–∞—à–∏–Ω—É
  const loadToTruck = (truckIndex: number, type: string, amount: number) => {
    setTruckLoadings(prev => prev.map((truck, index) => 
      index === truckIndex 
        ? { ...truck, [type]: (truck[type as keyof TruckLoading] as number) + amount }
        : truck
    ));
  };

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –º–∞—à–∏–Ω
  const saveTruckLoadings = async () => {
    try {
      const response = await fetch('/api/production/truck-loadings', {
        method: 'PUT',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          date: selectedDate,
          timeSlot: selectedTimeSlot,
          loadings: truckLoadings
        })
      });
      
      if (response.ok) {
        alert('‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –º–∞—à–∏–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!');
      }
    } catch (error) {
      console.error('Error saving truck loadings:', error);
      alert('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏');
    }
  };

  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞
  const ProductSection = ({ 
    title, 
    type, 
    needs19l, 
    needs5l, 
    produced19l, 
    produced5l 
  }: {
    title: string;
    type: string;
    needs19l: number;
    needs5l: number;
    produced19l: number;
    produced5l: number;
  }) => {
    const remaining19l = Math.max(0, needs19l - produced19l);
    const remaining5l = Math.max(0, needs5l - produced5l);
    const extra19l = Math.max(0, produced19l - needs19l);
    const extra5l = Math.max(0, produced5l - needs5l);

    return (
      <div className="bg-white p-6 rounded-lg shadow">
        <h3 className="text-xl font-bold text-gray-900 mb-4">{title}</h3>
        
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          {/* 19–ª */}
          <div className="border rounded-lg p-4">
            <h4 className="font-semibold text-gray-800 mb-3">ü´ô 19–ª –±—É—Ç—ã–ª–∫–∏</h4>
            
            <div className="space-y-3 mb-4">
              <div className="flex justify-between">
                <span className="text-gray-600">üìã –ù—É–∂–Ω–æ –ø–æ –∑–∞—è–≤–∫–∞–º:</span>
                <span className="font-bold text-red-600">{needs19l} —à—Ç</span>
              </div>
              <div className="flex justify-between">
                <span className="text-gray-600">‚úÖ –ü—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–æ:</span>
                <span className="font-bold text-green-600">
                  {produced19l} —à—Ç
                  {extra19l > 0 && <span className="text-blue-600"> (+{extra19l} –¥–æ–ø)</span>}
                </span>
              </div>
              <div className="flex justify-between">
                <span className="text-gray-600">–°—Ç–∞—Ç—É—Å:</span>
                <span className={`font-bold ${remaining19l === 0 ? 'text-green-600' : 'text-red-600'}`}>
                  {remaining19l === 0 ? '‚úÖ –ì–æ—Ç–æ–≤–æ' : `‚ùå –û—Å—Ç–∞–ª–æ—Å—å: ${remaining19l} —à—Ç`}
                </span>
              </div>
            </div>
            
            <div className="space-y-2">
              {remaining19l > 0 && (
                <>
                  <button
                    onClick={() => produceWater(type, '19l', 1)}
                    className="w-full bg-red-500 text-white py-2 rounded hover:bg-red-600 font-medium"
                  >
                    +1 (–æ—Å—Ç–∞–ª–æ—Å—å {remaining19l})
                  </button>
                  <button
                    onClick={() => produceWater(type, '19l', Math.min(5, remaining19l))}
                    className="w-full bg-red-500 text-white py-2 rounded hover:bg-red-600 font-medium"
                  >
                    +5 (–æ—Å—Ç–∞–ª–æ—Å—å {remaining19l})
                  </button>
                </>
              )}
              <button
                onClick={() => produceWater(type, '19l', 1)}
                className="w-full bg-blue-500 text-white py-2 rounded hover:bg-blue-600 font-medium"
              >
                +1 –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ
              </button>
              <button
                onClick={() => produceWater(type, '19l', 5)}
                className="w-full bg-blue-500 text-white py-2 rounded hover:bg-blue-600 font-medium"
              >
                +5 –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ
              </button>
            </div>
          </div>

          {/* 5–ª */}
          <div className="border rounded-lg p-4">
            <h4 className="font-semibold text-gray-800 mb-3">ü•§ 5–ª –±—É—Ç—ã–ª–∫–∏</h4>
            
            <div className="space-y-3 mb-4">
              <div className="flex justify-between">
                <span className="text-gray-600">üìã –ù—É–∂–Ω–æ –ø–æ –∑–∞—è–≤–∫–∞–º:</span>
                <span className="font-bold text-red-600">{needs5l} —à—Ç</span>
              </div>
              <div className="flex justify-between">
                <span className="text-gray-600">‚úÖ –ü—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–æ:</span>
                <span className="font-bold text-green-600">
                  {produced5l} —à—Ç
                  {extra5l > 0 && <span className="text-blue-600"> (+{extra5l} –¥–æ–ø)</span>}
                </span>
              </div>
              <div className="flex justify-between">
                <span className="text-gray-600">–°—Ç–∞—Ç—É—Å:</span>
                <span className={`font-bold ${remaining5l === 0 ? 'text-green-600' : 'text-red-600'}`}>
                  {remaining5l === 0 ? '‚úÖ –ì–æ—Ç–æ–≤–æ' : `‚ùå –û—Å—Ç–∞–ª–æ—Å—å: ${remaining5l} —à—Ç`}
                </span>
              </div>
            </div>
            
            <div className="space-y-2">
              {remaining5l > 0 && (
                <>
                  <button
                    onClick={() => produceWater(type, '5l', 1)}
                    className="w-full bg-red-500 text-white py-2 rounded hover:bg-red-600 font-medium"
                  >
                    +1 (–æ—Å—Ç–∞–ª–æ—Å—å {remaining5l})
                  </button>
                  <button
                    onClick={() => produceWater(type, '5l', Math.min(5, remaining5l))}
                    className="w-full bg-red-500 text-white py-2 rounded hover:bg-red-600 font-medium"
                  >
                    +5 (–æ—Å—Ç–∞–ª–æ—Å—å {remaining5l})
                  </button>
                </>
              )}
              <button
                onClick={() => produceWater(type, '5l', 1)}
                className="w-full bg-blue-500 text-white py-2 rounded hover:bg-blue-600 font-medium"
              >
                +1 –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ
              </button>
              <button
                onClick={() => produceWater(type, '5l', 5)}
                className="w-full bg-blue-500 text-white py-2 rounded hover:bg-blue-600 font-medium"
              >
                +5 –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ
              </button>
            </div>
          </div>
        </div>
      </div>
    );
  };

  // –í–∫–ª–∞–¥–∫–∞ –°–∫–ª–∞–¥
  const WarehouseTab = () => (
    <div className="space-y-6">
      <div className="bg-white p-6 rounded-lg shadow">
        <h2 className="text-lg font-bold text-gray-900 mb-4">üì¶ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∫–ª–∞–¥–æ–º</h2>
        
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div className="bg-blue-50 p-6 rounded-lg">
            <h3 className="font-bold text-blue-900 mb-4">ü´ô –ü—É—Å—Ç—ã–µ –±—É—Ç—ã–ª–∫–∏</h3>
            <div className="space-y-4">
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">19–ª –±—É—Ç—ã–ª–∫–∏</label>
                <input
                  type="number"
                  min="0"
                  value={production.empty_bottles_19l}
                  onChange={e => updateEmptyBottles('19l', parseInt(e.target.value) || 0)}
                  className="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 text-black"
                />
              </div>
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">5–ª –±—É—Ç—ã–ª–∫–∏</label>
                <input
                  type="number"
                  min="0"
                  value={production.empty_bottles_5l}
                  onChange={e => updateEmptyBottles('5l', parseInt(e.target.value) || 0)}
                  className="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 text-black"
                />
              </div>
            </div>
          </div>
          
          <div className="bg-green-50 p-6 rounded-lg">
            <h3 className="font-bold text-green-900 mb-4">üíß –ì–æ—Ç–æ–≤–∞—è –ø—Ä–æ–¥—É–∫—Ü–∏—è</h3>
            <div className="space-y-3 text-sm">
              <div className="flex justify-between">
                <span>üíé –•—Ä—É—Å—Ç–∞–ª—å–Ω–∞—è 19–ª:</span>
                <span className="font-bold">{production.hrustalnaya_19l} —à—Ç</span>
              </div>
              <div className="flex justify-between">
                <span>üíé –•—Ä—É—Å—Ç–∞–ª—å–Ω–∞—è 5–ª:</span>
                <span className="font-bold">{production.hrustalnaya_5l} —à—Ç</span>
              </div>
              <div className="flex justify-between">
                <span>üë∂ –ú–∞–ª—ã—à 19–ª:</span>
                <span className="font-bold">{production.malysh_19l} —à—Ç</span>
              </div>
              <div className="flex justify-between">
                <span>üë∂ –ú–∞–ª—ã—à 5–ª:</span>
                <span className="font-bold">{production.malysh_5l} —à—Ç</span>
              </div>
              <div className="flex justify-between">
                <span>‚ö° –°–µ–ª–µ–Ω 19–ª:</span>
                <span className="font-bold">{production.selen_19l} —à—Ç</span>
              </div>
              <div className="flex justify-between">
                <span>‚ö° –°–µ–ª–µ–Ω 5–ª:</span>
                <span className="font-bold">{production.selen_5l} —à—Ç</span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );

  // –í–∫–ª–∞–¥–∫–∞ –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ
  const ProductionTab = () => (
    <div className="space-y-6">
      <div className="bg-blue-50 p-4 rounded-lg">
        <h3 className="font-bold text-blue-900 mb-2">üìã –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ</h3>
        <div className="text-sm text-blue-800 space-y-1">
          <div>üî¥ <strong>–ö—Ä–∞—Å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏</strong> - –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ –ø–æ –∑–∞—è–≤–∫–∞–º –∫–ª–∏–µ–Ω—Ç–æ–≤</div>
          <div>üîµ <strong>–°–∏–Ω–∏–µ –∫–Ω–æ–ø–∫–∏</strong> - –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ –¥–ª—è –ª–æ–≥–∏—Å—Ç–∏–∫–∏</div>
          <div>‚úÖ <strong>–°—Ç–∞—Ç—É—Å "–ì–æ—Ç–æ–≤–æ"</strong> - –≤—Å–µ –∑–∞—è–≤–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã</div>
        </div>
      </div>
      
      <ProductSection 
        title="üíé –•—Ä—É—Å—Ç–∞–ª—å–Ω–∞—è"
        type="hrustalnaya"
        needs19l={production.needs_hrustalnaya_19l}
        needs5l={production.needs_hrustalnaya_5l}
        produced19l={production.hrustalnaya_19l}
        produced5l={production.hrustalnaya_5l}
      />
      
      <ProductSection 
        title="üë∂ –ú–∞–ª—ã—à"
        type="malysh"
        needs19l={production.needs_malysh_19l}
        needs5l={production.needs_malysh_5l}
        produced19l={production.malysh_19l}
        produced5l={production.malysh_5l}
      />
      
      <ProductSection 
        title="‚ö° –°–µ–ª–µ–Ω"
        type="selen"
        needs19l={production.needs_selen_19l}
        needs5l={production.needs_selen_5l}
        produced19l={production.selen_19l}
        produced5l={production.selen_5l}
      />
    </div>
  );

  // –í–∫–ª–∞–¥–∫–∞ –ó–∞–≥—Ä—É–∑–∫–∞ –º–∞—à–∏–Ω
  const LoadingTab = () => (
    <div className="space-y-6">
      <div className="bg-green-50 p-4 rounded-lg">
        <h3 className="font-bold text-green-900 mb-2">üöõ –õ–æ–≥–∏—Å—Ç–∏–∫–∞</h3>
        <div className="text-sm text-green-800 space-y-1">
          <div>üìã <strong>–ü–æ –∑–∞—è–≤–∫–∞–º</strong> - –∑–∞–∫–∞–∑—ã –∫–ª–∏–µ–Ω—Ç–æ–≤ (–∫—Ä–∞—Å–Ω—ã–µ —Ü–∏—Ñ—Ä—ã)</div>
          <div>üíß <strong>–°–≤–æ–±–æ–¥–Ω–∞—è –≤–æ–¥–∞</strong> - –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–¥—É–∫—Ü–∏—è –¥–ª—è –Ω–æ–≤—ã—Ö –∑–∞—è–≤–æ–∫ –≤ –ø—É—Ç–∏ (—Å–∏–Ω–∏–µ —Ü–∏—Ñ—Ä—ã)</div>
          <div>üéØ <strong>–¶–µ–ª—å</strong> - –æ–±–µ—Å–ø–µ—á–∏—Ç—å –≤–æ–¥–∏—Ç–µ–ª–µ–π —Å–≤–æ–±–æ–¥–Ω–æ–π –≤–æ–¥–æ–π –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞—è–≤–æ–∫</div>
        </div>
      </div>
      
      <div className="bg-white p-6 rounded-lg shadow">
        <h2 className="text-lg font-bold text-gray-900 mb-4">üöõ –ó–∞–≥—Ä—É–∑–∫–∞ –º–∞—à–∏–Ω - {selectedTimeSlot}</h2>
        
        <div className="overflow-x-auto">
          <table className="min-w-full border-collapse border border-gray-300">
            <thead>
              <tr className="bg-gray-100">
                <th className="border border-gray-300 px-4 py-3 text-left font-bold text-gray-900">üöõ –ú–∞—à–∏–Ω–∞</th>
                <th className="border border-gray-300 px-4 py-3 text-center font-bold text-gray-900">üíé –•—Ä—É—Å—Ç–∞–ª—å–Ω–∞—è</th>
                <th className="border border-gray-300 px-4 py-3 text-center font-bold text-gray-900">üë∂ –ú–∞–ª—ã—à</th>
                <th className="border border-gray-300 px-4 py-3 text-center font-bold text-gray-900">‚ö° –°–µ–ª–µ–Ω</th>
              </tr>
            </thead>
            <tbody>
              {truckLoadings.length > 0 ? truckLoadings.map((truck, index) => (
                <tr key={`${truck.truck_name}-${truck.time_slot}`} className="hover:bg-gray-50">
                  <td className="border border-gray-300 px-4 py-4 font-bold text-gray-900">{truck.truck_name}</td>
                  
                  <td className="border border-gray-300 px-4 py-4 text-center">
                    <div className="space-y-2">
                      {/* 19–ª */}
                      <div className="p-2 bg-gray-50 rounded">
                        <div className="text-xs text-gray-600 mb-1">ü´ô 19–ª</div>
                        <div className="flex items-center justify-center space-x-2 mb-1">
                          <span className="text-red-700 font-bold">üìã {truck.hrustalnaya_orders_19l}</span>
                          <span className="text-blue-700 font-bold">üíß {truck.hrustalnaya_free_19l}</span>
                        </div>
                        <div className="text-xs text-gray-600">–í—Å–µ–≥–æ: {truck.hrustalnaya_orders_19l + truck.hrustalnaya_free_19l}</div>
                        <button
                          onClick={() => loadToTruck(index, 'hrustalnaya_free_19l', 1)}
                          className="bg-blue-600 text-white px-2 py-1 rounded text-xs hover:bg-blue-700 font-medium mt-1"
                        >
                          +1 –¥–æ–ø
                        </button>
                      </div>
                      
                      {/* 5–ª */}
                      <div className="p-2 bg-gray-50 rounded">
                        <div className="text-xs text-gray-600 mb-1">ü•§ 5–ª</div>
                        <div className="flex items-center justify-center space-x-2 mb-1">
                          <span className="text-red-700 font-bold">üìã {truck.hrustalnaya_orders_5l}</span>
                          <span className="text-blue-700 font-bold">üíß {truck.hrustalnaya_free_5l}</span>
                        </div>
                        <div className="text-xs text-gray-600">–í—Å–µ–≥–æ: {truck.hrustalnaya_orders_5l + truck.hrustalnaya_free_5l}</div>
                        <button
                          onClick={() => loadToTruck(index, 'hrustalnaya_free_5l', 1)}
                          className="bg-blue-600 text-white px-2 py-1 rounded text-xs hover:bg-blue-700 font-medium mt-1"
                        >
                          +1 –¥–æ–ø
                        </button>
                      </div>
                    </div>
                  </td>
                  
                  <td className="border border-gray-300 px-4 py-4 text-center">
                    <div className="space-y-2">
                      {/* 19–ª */}
                      <div className="p-2 bg-gray-50 rounded">
                        <div className="text-xs text-gray-600 mb-1">ü´ô 19–ª</div>
                        <div className="flex items-center justify-center space-x-2 mb-1">
                          <span className="text-red-700 font-bold">üìã {truck.malysh_orders_19l}</span>
                          <span className="text-blue-700 font-bold">üíß {truck.malysh_free_19l}</span>
                        </div>
                        <div className="text-xs text-gray-600">–í—Å–µ–≥–æ: {truck.malysh_orders_19l + truck.malysh_free_19l}</div>
                        <button
                          onClick={() => loadToTruck(index, 'malysh_free_19l', 1)}
                          className="bg-blue-600 text-white px-2 py-1 rounded text-xs hover:bg-blue-700 font-medium mt-1"
                        >
                          +1 –¥–æ–ø
                        </button>
                      </div>
                      
                      {/* 5–ª */}
                      <div className="p-2 bg-gray-50 rounded">
                        <div className="text-xs text-gray-600 mb-1">ü•§ 5–ª</div>
                        <div className="flex items-center justify-center space-x-2 mb-1">
                          <span className="text-red-700 font-bold">üìã {truck.malysh_orders_5l}</span>
                          <span className="text-blue-700 font-bold">üíß {truck.malysh_free_5l}</span>
                        </div>
                        <div className="text-xs text-gray-600">–í—Å–µ–≥–æ: {truck.malysh_orders_5l + truck.malysh_free_5l}</div>
                        <button
                          onClick={() => loadToTruck(index, 'malysh_free_5l', 1)}
                          className="bg-blue-600 text-white px-2 py-1 rounded text-xs hover:bg-blue-700 font-medium mt-1"
                        >
                          +1 –¥–æ–ø
                        </button>
                      </div>
                    </div>
                  </td>
                  
                  <td className="border border-gray-300 px-4 py-4 text-center">
                    <div className="space-y-2">
                      {/* 19–ª */}
                      <div className="p-2 bg-gray-50 rounded">
                        <div className="text-xs text-gray-600 mb-1">ü´ô 19–ª</div>
                        <div className="flex items-center justify-center space-x-2 mb-1">
                          <span className="text-red-700 font-bold">üìã {truck.selen_orders_19l}</span>
                          <span className="text-blue-700 font-bold">üíß {truck.selen_free_19l}</span>
                        </div>
                        <div className="text-xs text-gray-600">–í—Å–µ–≥–æ: {truck.selen_orders_19l + truck.selen_free_19l}</div>
                        <button
                          onClick={() => loadToTruck(index, 'selen_free_19l', 1)}
                          className="bg-blue-600 text-white px-2 py-1 rounded text-xs hover:bg-blue-700 font-medium mt-1"
                        >
                          +1 –¥–æ–ø
                        </button>
                      </div>
                      
                      {/* 5–ª */}
                      <div className="p-2 bg-gray-50 rounded">
                        <div className="text-xs text-gray-600 mb-1">ü•§ 5–ª</div>
                        <div className="flex items-center justify-center space-x-2 mb-1">
                          <span className="text-red-700 font-bold">üìã {truck.selen_orders_5l}</span>
                          <span className="text-blue-700 font-bold">üíß {truck.selen_free_5l}</span>
                        </div>
                        <div className="text-xs text-gray-600">–í—Å–µ–≥–æ: {truck.selen_orders_5l + truck.selen_free_5l}</div>
                        <button
                          onClick={() => loadToTruck(index, 'selen_free_5l', 1)}
                          className="bg-blue-600 text-white px-2 py-1 rounded text-xs hover:bg-blue-700 font-medium mt-1"
                        >
                          +1 –¥–æ–ø
                        </button>
                      </div>
                    </div>
                  </td>
                </tr>
              )) : (
                <tr>
                  <td colSpan={4} className="border border-gray-300 px-4 py-6 text-center text-gray-500">
                    –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ –º–∞—à–∏–Ω–∞–º –¥–ª—è –≤—Ä–µ–º–µ–Ω–∏ "{selectedTimeSlot}"
                  </td>
                </tr>
              )}
            </tbody>
          </table>
        </div>
      </div>
    </div>
  );

  // –í–∫–ª–∞–¥–∫–∞ –ê–Ω–∞–ª–∏—Ç–∏–∫–∞
  const AnalyticsTab = () => {
    const totalProduced = production.hrustalnaya_19l + production.hrustalnaya_5l + 
                         production.malysh_19l + production.malysh_5l + 
                         production.selen_19l + production.selen_5l;
    
    const totalNeeded = production.needs_hrustalnaya_19l + production.needs_hrustalnaya_5l + 
                       production.needs_malysh_19l + production.needs_malysh_5l + 
                       production.needs_selen_19l + production.needs_selen_5l;
    
    const completionRate = totalNeeded > 0 ? Math.round((totalProduced / totalNeeded) * 100) : 0;
    
    return (
      <div className="space-y-6">
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
          <div className="bg-blue-50 p-6 rounded-lg">
            <h3 className="font-bold text-blue-900 mb-2">üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h3>
            <div className="space-y-2 text-sm">
              <div className="flex justify-between">
                <span>–í—Å–µ–≥–æ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–æ:</span>
                <span className="font-bold">{totalProduced} —à—Ç</span>
              </div>
              <div className="flex justify-between">
                <span>–ù—É–∂–Ω–æ –ø–æ –∑–∞—è–≤–∫–∞–º:</span>
                <span className="font-bold">{totalNeeded} —à—Ç</span>
              </div>
              <div className="flex justify-between">
                <span>–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–ª–∞–Ω–∞:</span>
                <span className={`font-bold ${completionRate >= 100 ? 'text-green-600' : 'text-red-600'}`}>
                  {completionRate}%
                </span>
              </div>
            </div>
          </div>
          
          <div className="bg-green-50 p-6 rounded-lg">
            <h3 className="font-bold text-green-900 mb-2">üì¶ –û—Å—Ç–∞—Ç–∫–∏ —Ç–∞—Ä—ã</h3>
            <div className="space-y-2 text-sm">
              <div className="flex justify-between">
                <span>19–ª –±—É—Ç—ã–ª–∫–∏:</span>
                <span className="font-bold">{production.empty_bottles_19l} —à—Ç</span>
              </div>
              <div className="flex justify-between">
                <span>5–ª –±—É—Ç—ã–ª–∫–∏:</span>
                <span className="font-bold">{production.empty_bottles_5l} —à—Ç</span>
              </div>
              <div className="flex justify-between">
                <span>–í—Å–µ–≥–æ —Ç–∞—Ä—ã:</span>
                <span className="font-bold">{production.empty_bottles_19l + production.empty_bottles_5l} —à—Ç</span>
              </div>
            </div>
          </div>
          
          <div className="bg-purple-50 p-6 rounded-lg">
            <h3 className="font-bold text-purple-900 mb-2">üöõ –ó–∞–≥—Ä—É–∑–∫–∞ –º–∞—à–∏–Ω</h3>
            <div className="space-y-2 text-sm">
              <div className="flex justify-between">
                <span>–ê–∫—Ç–∏–≤–Ω—ã—Ö –º–∞—à–∏–Ω:</span>
                <span className="font-bold">{truckLoadings.length} —à—Ç</span>
              </div>
              <div className="flex justify-between">
                <span>–í—Ä–µ–º—è —Å–º–µ–Ω—ã:</span>
                <span className="font-bold">{selectedTimeSlot}</span>
              </div>
            </div>
          </div>
        </div>
        
        <div className="bg-white p-6 rounded-lg shadow">
          <h3 className="text-lg font-bold text-gray-900 mb-4">üìà –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø—Ä–æ–¥—É–∫—Ç–∞–º</h3>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
            <div className="bg-blue-50 p-4 rounded-lg">
              <div className="font-bold text-blue-900 mb-2">üíé –•—Ä—É—Å—Ç–∞–ª—å–Ω–∞—è</div>
              <div className="text-sm space-y-1">
                <div>19–ª: {production.hrustalnaya_19l} —à—Ç</div>
                <div>5–ª: {production.hrustalnaya_5l} —à—Ç</div>
                <div className="font-bold">–í—Å–µ–≥–æ: {production.hrustalnaya_19l + production.hrustalnaya_5l} —à—Ç</div>
              </div>
            </div>
            
            <div className="bg-green-50 p-4 rounded-lg">
              <div className="font-bold text-green-900 mb-2">üë∂ –ú–∞–ª—ã—à</div>
              <div className="text-sm space-y-1">
                <div>19–ª: {production.malysh_19l} —à—Ç</div>
                <div>5–ª: {production.malysh_5l} —à—Ç</div>
                <div className="font-bold">–í—Å–µ–≥–æ: {production.malysh_19l + production.malysh_5l} —à—Ç</div>
              </div>
            </div>
            
            <div className="bg-purple-50 p-4 rounded-lg">
              <div className="font-bold text-purple-900 mb-2">‚ö° –°–µ–ª–µ–Ω</div>
              <div className="text-sm space-y-1">
                <div>19–ª: {production.selen_19l} —à—Ç</div>
                <div>5–ª: {production.selen_5l} —à—Ç</div>
                <div className="font-bold">–í—Å–µ–≥–æ: {production.selen_19l + production.selen_5l} —à—Ç</div>
              </div>
            </div>
          </div>
        </div>
      </div>
    );
  };

  return (
    <div className="min-h-screen bg-gray-50">
      <div className="w-full py-4 px-2 sm:px-4 lg:px-6">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="mb-6">
          <h1 className="text-2xl sm:text-3xl font-bold text-gray-900">üè≠ –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ–º</h1>
          <p className="mt-2 text-sm sm:text-base text-gray-600">
            –ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∫–ª–∞–¥–æ–º, –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ–º –∏ –ª–æ–≥–∏—Å—Ç–∏–∫–æ–π –Ω–∞ {selectedDate}
          </p>
        </div>

        {/* –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è */}
        <div className="mb-6 flex flex-col sm:flex-row items-start sm:items-center space-y-4 sm:space-y-0 sm:space-x-6">
          <div className="flex items-center space-x-4">
            <label className="text-sm font-medium text-gray-700">üìÖ –î–∞—Ç–∞:</label>
            <input
              type="date"
              value={selectedDate}
              onChange={e => setSelectedDate(e.target.value)}
              className="px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 text-black"
            />
          </div>
          
          <div className="flex items-center space-x-4">
            <label className="text-sm font-medium text-gray-700">‚è∞ –í—Ä–µ–º—è:</label>
            <select
              value={selectedTimeSlot}
              onChange={e => setSelectedTimeSlot(e.target.value)}
              className="px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 text-black"
            >
              <option value="–£—Ç—Ä–æ">üåÖ –£—Ç—Ä–æ</option>
              <option value="–î–µ–Ω—å">‚òÄÔ∏è –î–µ–Ω—å</option>
              <option value="–í–µ—á–µ—Ä">üåÜ –í–µ—á–µ—Ä</option>
            </select>
          </div>
        </div>

        {/* –í–∫–ª–∞–¥–∫–∏ */}
        <div className="mb-6">
          <div className="border-b border-gray-200">
            <nav className="-mb-px flex space-x-8">
              <button
                onClick={() => setActiveTab('warehouse')}
                className={`py-2 px-1 border-b-2 font-medium text-sm ${
                  activeTab === 'warehouse'
                    ? 'border-blue-500 text-blue-600'
                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
                }`}
              >
                üì¶ –°–∫–ª–∞–¥
              </button>
              <button
                onClick={() => setActiveTab('production')}
                className={`py-2 px-1 border-b-2 font-medium text-sm ${
                  activeTab === 'production'
                    ? 'border-blue-500 text-blue-600'
                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
                }`}
              >
                üè≠ –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ
              </button>
              <button
                onClick={() => setActiveTab('loading')}
                className={`py-2 px-1 border-b-2 font-medium text-sm ${
                  activeTab === 'loading'
                    ? 'border-blue-500 text-blue-600'
                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
                }`}
              >
                üöõ –ó–∞–≥—Ä—É–∑–∫–∞ –º–∞—à–∏–Ω
              </button>
              <button
                onClick={() => setActiveTab('analytics')}
                className={`py-2 px-1 border-b-2 font-medium text-sm ${
                  activeTab === 'analytics'
                    ? 'border-blue-500 text-blue-600'
                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
                }`}
              >
                üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞
              </button>
            </nav>
          </div>
        </div>

        {loading ? (
          <div className="text-center py-8">
            <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4"></div>
            <div className="text-xl text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...</div>
          </div>
        ) : (
          <div className="space-y-6">
            {/* –ö–æ–Ω—Ç–µ–Ω—Ç –≤–∫–ª–∞–¥–æ–∫ */}
            {activeTab === 'warehouse' && <WarehouseTab />}
            {activeTab === 'production' && <ProductionTab />}
            {activeTab === 'loading' && <LoadingTab />}
            {activeTab === 'analytics' && <AnalyticsTab />}
            
            {/* –ö–Ω–æ–ø–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è */}
            <div className="bg-white p-6 rounded-lg shadow">
              <div className="flex justify-between items-center">
                <div>
                  <h3 className="text-lg font-bold text-gray-900">üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö</h3>
                  <p className="text-sm text-gray-600">–°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö</p>
                </div>
                <div className="flex space-x-4">
                  <button
                    onClick={saveProductionData}
                    className="bg-green-600 text-white px-6 py-3 rounded-lg font-bold hover:bg-green-700 transition-all"
                  >
                    üíæ –°–û–•–†–ê–ù–ò–¢–¨ –ü–†–û–ò–ó–í–û–î–°–¢–í–û
                  </button>
                  <button
                    onClick={saveTruckLoadings}
                    className="bg-blue-600 text-white px-6 py-3 rounded-lg font-bold hover:bg-blue-700 transition-all"
                  >
                    üöõ –°–û–•–†–ê–ù–ò–¢–¨ –ó–ê–ì–†–£–ó–ö–£
                  </button>
                </div>
              </div>
            </div>
          </div>
        )}
      </div>
    </div>
  );
} 